{"version":3,"sources":["components/Note.js","services/notes.js","components/errorMessage.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","req","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","res","put","Notification","message","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","i","key","find","changedNote","returnedNote","catch","err","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","length","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"mOAaeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,KCPpCK,EAAU,kCAwBD,EAtBA,WACX,IAAMC,EAAMC,IAAMC,IAAIH,GAChBI,EAAc,CAChBC,GAAI,IACJP,QAAS,mCACTQ,KAAM,2BACNV,WAAW,GAEZ,OAAOK,EAAIM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAON,OAczC,EAVA,SAAAO,GAEX,OADYT,IAAMU,KAAKZ,EAASW,GACrBJ,MAAK,SAAAM,GAAG,OAAIA,EAAIJ,SAQhB,EALA,SAACJ,EAAIM,GAEhB,OADYT,IAAMY,IAAN,UAAad,EAAb,YAAwBK,GAAMM,GAC/BJ,MAAK,SAAAM,GAAG,OAAIA,EAAIJ,SCRhBM,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,yBAAKnB,UAAU,SACZmB,ICoFQC,EAxFH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIuBN,mBAAS,IAJhC,mBAITO,EAJS,KAIKC,EAJL,KAMhBC,qBAAU,WACRC,IAEGrB,MAAK,SAAAsB,GACJT,EAASS,QAEZ,IAEH,IAyCMC,EAAcP,EAChBJ,EACAA,EAAMY,QAAO,SAAAtC,GAAI,OAAIA,EAAKG,aAE9B,OACE,6BACE,qCACA,kBAAC,EAAD,CAAcoB,QAASS,IACvB,6BACE,4BAAQ1B,QAAS,kBAAMyB,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BACGO,EAAYE,KAAI,SAACvC,EAAMwC,GAAP,OACf,kBAAC,EAAD,CACAC,IAAKD,EACLxC,KAAMA,EACNC,iBAAkB,kBA1CC,SAACW,GAC1B,IAAMZ,EAAO0B,EAAMgB,MAAK,SAAA1C,GAAI,OAAIA,EAAKY,KAAOA,KACtC+B,EAAW,eAAO3C,EAAP,CAAaG,WAAYH,EAAKG,YAE/CgC,EACQvB,EAAI+B,GACX7B,MAAK,SAAA8B,GACJjB,EAASD,EAAMa,KAAI,SAAAvC,GAAI,OAAIA,EAAKY,KAAOA,EAAKZ,EAAO4C,SAEpDC,OAAM,SAAAC,GACLb,EAAgB,SAAD,OACJjC,EAAKK,QADD,0CAGf0C,YAAW,WACTd,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAAtC,GAAI,OAAIA,EAAKY,KAAOA,SA0BdoC,CAAmBhD,EAAKY,WAIpD,0BAAMqC,SA/DM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjB/C,QAASuB,EACTf,MAAM,IAAIwC,MAAOC,cACjBnD,UAAWoD,KAAKC,SAAW,GAC3B5C,GAAIc,EAAM+B,OAAS,GAGrBtB,EACQiB,GACPtC,MAAK,SAAA8B,GACJjB,EAASD,EAAMT,OAAO2B,IACtBf,EAAW,SAmDT,2BACE6B,MAAO9B,EACP+B,SA7BiB,SAACT,GACxBrB,EAAWqB,EAAMU,OAAOF,UA8BpB,4BAAQG,KAAK,UAAb,W,MCnFRC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.2792c7ac.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? 'make not important' : 'make important'\n\n  return (\n    <li className='note'>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n      </li>\n  )\n}\n\nexport default Note;\n","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/notes'\n\nconst getAll = () => {\n    const req = axios.get(baseUrl)\n    const nonExisting = {\n        id: 10000,\n        content: 'This note is not saved to server',\n        date: '2019-05-30T17:30:31.098Z',\n        important: true,\n      }\n       return req.then(response => response.data.concat(nonExisting))\n    // return req.then(res => res.data)\n}\n\nconst create = newObject => {\n    const req = axios.post(baseUrl, newObject)\n    return req.then(res => res.data)\n}\n\nconst update = (id, newObject) => {\n    const req = axios.put(`${baseUrl}/${id}`, newObject)\n    return req.then(res => res.data)\n}\n\nexport default {getAll, create, update}","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className='error'>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification;","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Note from './components/Note'\nimport noteService from './services/notes'\nimport Notification from './components/errorMessage'\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage]= useState('')\n\n  useEffect(() => {\n    noteService\n    .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1,\n    }\n\n    noteService\n    .create(noteObject)\n    .then(returnedNote => {\n      setNotes(notes.concat(returnedNote))\n      setNewNote('')\n    })\n  }\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find(note => note.id === id)\n    const changedNote = {...note, important: !note.important }\n\n    noteService\n    .update(id, changedNote)\n    .then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    })\n    .catch(err => {\n      setErrorMessage(\n        `Note '${note.content}' was already removed from the server`\n      )\n      setTimeout(() =>{\n        setErrorMessage(null)\n      }, 5000)\n      setNotes(notes.filter(note => note.id !== id))\n    })\n  }\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note, i) =>\n          <Note\n          key={i}\n          note={note}\n          toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}